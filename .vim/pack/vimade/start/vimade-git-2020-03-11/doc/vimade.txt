*vimade.txt*
                                                                      *vimade*

==============================================================================
CONTENTS                                                     *vimade-contents*
  1. Intro......................................................|vimade-intro|
  2. Contributing........................................|vimade-contributing|
  3. Support..................................................|vimade-support|
  4. Configuration.............................................|vimade-config|
  5. Commands................................................|vimade-commands|
  6. custom-fades........................................|vimade-custom-fades|
  7. normalnc................................................|vimade-normalnc|
  8. FAQ/Help....................................................|vimade-help|

==============================================================================
INTRO                                                           *vimade-intro*

Vimade is an eye catching plugin that fades your inactive buffers.  You can
think of Vimade as  2-dimensional infinite syntax list that adjusts itself by
reacting to color changes (background, foreground, NormalNC, and colorscheme),
word wrap, diff groups.  Vimade also implements its own 256 color based fading
that does its best to preserve colors instead  of rounding to greys.

==============================================================================
CONTRIBUTING                                             *vimade-contributing*

Open a bug report at 'https://github.com/TaDaa/vimade'.  Please include
'VimadeInfo' in the report and the more information the better, but I will
gladly look into everything (even just general slowness).

==============================================================================
SUPPORT                                                       *vimade-support*

Vim/NVIM support:
  * Vim 8+
  * NVIM
  * GUI
  * terminals (256 color and 'set termguicolors')
  * tmux

Terminal support:
  * All terminals are supported when at least 256 colors are active and a
    background highlight has been specified.

Terminals with background detection:
(Vimade can detect the background color inherited from terminal settings)
  * iTerm
  * Tilix
  * Kitty
  * Gnome
  * Rxvt
  * Other terminals that support the ansi codes \033]11;?\007 or
    \033]11;?\033\\

==============================================================================
CONFIGURATION                                                  *vimade-config*

                                                            *g:vimade_running*
This flag is used to control whether or not vimade should be running.  This
can be useful to toggle vimade during startup.  Alternatively, you may as also
use VimadeDisable, VimadeEnable, call vimade#Disable, call vimade#Enable
respectively

                                                                    *g:vimade*
The vimade configuration object

                                                           *g:vimade.normalid*
If not specified, the normalid is determined when vimade is first loaded.
normalid provides the id of the "Normal" highlight which is used to calculate
fading.  You can override this config with another highlight group.

                                                         *g:vimade.normalncid*
If not specified, the normalncid is determined when vimade is first loaded.
normalncid provides the id of the "NormalNC" highlight which is used to
calculate fading for inactive buffers in NVIM.  You can override this config
with another highlight group.

                                                             *g:vimade.basefg*
basefg can either be six digit hexidecimal color, rgb array
[0-255,0-255,0-255], or cterm code (in terminal).  Basefg is only used to
calculate the default fading that should be applied to Normal text.  By
default basefg is calculated as the "Normal" highlight guifg or ctermfg.

                                                             *g:vimade.basebg*
basebg can be either be six digit hexidecimal color, rgb array
[0-255,0-255,0-255], or cterm code (in terminal).  basebg is used as the color
that text is faded against.  You can override this config with another
hexidecimal color.  A cool feature of basebg is to use it to change the tint
of faded text even if its not your background!

                                                          *g:vimade.fadelevel*
Amount of fading applied between text and basebg.  0 will make the text the
same color as the background and 1 applies no fading.  The default value is
0.4.  If you are using terminal, you may need to tweak this value to get
better results.

                                                         *g:vimade.colbufsize*
The number of cols left and right of the determined scroll area that should be
precalculated. Reduce this value to improve performance. Default is 15 for gui
vim and 5 for terminals/gvim.

                                                         *g:vimade.rowbufsize*
The number of rows above and below of the determined scroll area that should
be precalculated. Reduce this value to improve performance Default is 15 for
gui vim and 0 for terminals/gvim.

                                                      *g:vimade.checkinterval*
The amount of time in milliseconds that vimade should check the screen for
changes.  This config is mainly used to detect resize and scroll changes that
occur on inactive windows. Checkinterval does nothing on gvim, if you want to
control the refresh time, see 'h updatetime'. Default is 100 for gui vim and
500 for neovim/terminal.

                                                      *g:vimade.usecursorhold*
Disables the timer running in the background and instead relies `OnCursorHold`
and `updatetime` (see h:updatetime).  The default value is `0` except on
Windows GVIM, which defaults to `1` due to the timer breaking movements.  If
you find that the timer is causing performance problems or other issues you
can disable it by setting this option to `1`.

                                                   *g:vimade.detecttermcolors*
Detect the terminal background and foreground colors.  This will work for Vim8
+ iTerm, Tilix, Kitty, Gnome, Rxvt, and other editors that support the
following query (```\033]11;?\007``` or ```\033]11;?\033\\```).  Default is 0.
This feature can cause unwanted side effects during startup and should be
enabled at your own risk

                                                       *g:vimade.enablescroll*
Enables fading while scrolling inactive windows.  This is only useful in gui
vim and does have a performance cost.  By default this setting is enabled in
gui vim and disabled for terminals.

                                                        *g:vimade.enablesigns*
Enabled by default for vim/nvim versions that support sign priority and causes
signs to be faded when switching buffers. Only visible signs are faded. This
feature can cause performance issues on older nvim/vim versions that don't
support sign priority.  Use signsretentionperiod to control the duration that
vimade checks for sign updates after switching buffers.

                                                            *g:vimade.signsid*
The starting id that Vimade should use when creating new signs. By default Vim
requires numeric values to create signs and its possible that collisions may
occur between plugins.  If you need to override this value for compatibility,
please open an issue as well.  Default is 13100.

                                               *g:vimade.signsretentionperiod*
Amount of time in milliseconds that faded buffers should be tracked for sign
changes.  Default value is 4000.

                                                        *g:vimade.fademinimap*
Enables a special fade effect for `severin-lemaignan/vim-minimap`.  Setting
vimade.fademinimap to 0 disables the special fade.  Default is 1.

                                                       *g:vimade.fadepriority*
Controls the highlighting priority. You may want to tweak this value to make
Vimade play nicely with other highlighting plugins and behaviors. For example,
if you want hlsearch to show results on all buffers, you may want to lower
this value to 0. Default is 10.

                                                      *g:vimade.signspriority*
Controls the signs fade priority. You may need to change this value if you
find that not all signs are fading properly. Please also open a defect if you
need to tweak this value as Vimade strives to minimize manual configuration
where possible. Default is 31.

                                                          *g:vimade.groupdiff*
Controls whether or not diffs will fade/unfade together.  If you want diffs to
be treated separately, set this value to 0. Default is 1

                                                    *g:vimade.groupscrollbind*
Controls whether or not scrollbound windows will fade/unfade together.  If you
want scrollbound windows to unfade together, set this to 1.  Default is 0.

                                                  *g:vimade.enablefocusfading*
Fades the current active window on focus blur and unfades when focus gained.
This can be desirable when switching applications or TMUX splits.
  * Install 'tmux-plugins/vim-tmux-focus-events' using your preferred plugin
    manager
  * Add `set -g focus-events on` to your tmux.conf
  * Neovim should work at this point, If you are using Vim you may also need
    the following snippet to the very end of your vimrc

>
 if has('gui_running') == 0 && has('nvim') == 0
    call feedkeys(":silent execute '!' | redraw!\<CR>")
 endif
<

                                                         *g:vimade.basegroups*
Neovim only setting that specifies the basegroups/built-in highlight groups
that will be faded using winhl when switching windows

                                                   *g:vimade.enablebasegroups*
Neovim only setting.  Enabled by default and allows basegroups/built-in
highlight fading using winhl.  This allows fading of built-in highlights such
as Folded, Search, etc.

==============================================================================
COMMANDS                                                     *vimade-commands*

:VimadeEnable                                                  *:VimadeEnable*
  Enables Vimade

:VimadeDisable                                                *:VimadeDisable*
  Unfades all buffers, signs, and disables Vimade

:VimadeWinDisable                                          *:VimadeWinDisable*
  Disables the current window

:VimadeBufDisable                                          *:VimadeBufDisable*
  Disables the current buffer

:VimadeFadeActive                                          *:VimadeFadeActive*
  Fades the current buffer

:VimadeUnfadeActive                                      *:VimadeUnfadeActive*
  Unfades the current buffer

:VimadeWinEnable                                            *:VimadeWinEnable*
  Enables the current window

:VimadeBufEnable                                            *:VimadeBufEnable*
  Enables the current buffer

:VimadeToggle                                                  *:VimadeToggle*
  Toggles Vimade between enabled and disabled states

:VimadeInfo                                                      *:VimadeInfo*
  Prints debug information that should be included in bug reports

:VimadeRedraw                                                  *:VimadeRedraw*
  Recalculates all fades and redraws all inactive buffers and signs

:VimadeFadeLevel {value}                                    *:VimadeFadeLevel*
  Changes vimade_fadelevel to the {value} specified.  {value} can be between
  0.0 and 1.0

:VimadeFadePriority {value}                              *:VimadeFadePriority*
  Changes vimade_fadepriority to the {value} specified.  This can be useful
  when combining Vimade with other plugins that also highlight using matches

:VimadeOverrideFolded                                  *:VimadeOverrideFolded*
  Overrides the Folded highlight by creating a link to the Vimade base fade.
  This should produce acceptable results for colorschemes that include Folded
  highlights that are distracting in faded windows.

:VimadeOverrideSignColumn                          *:VimadeOverrideSignColumn*
  EXPERIMENTAL -- Overrides the SignColumn highlight by creating a link to the
  Vimade base fade. This should produce acceptable results for colorschemes
  that include Folded highlights that are distracting in faded windows.

:VimadeOverrideLineNr                                  *:VimadeOverrideLineNr*
  EXPERIMENTAL -- Overrides the LineNr highlight by creating a link to the
  Vimade base fade. This should produce acceptable results for colorschemes
  that include Folded highlights that are distracting in faded windows.

:VimadeOverrideSplits                                  *:VimadeOverrideSplits*
  EXPERIMENTAL -- Overrides the VertSplit highlight by creating a link to the
  Vimade base fade. This should produce acceptable results for colorschemes
  that include Folded highlights that are distracting in faded windows.

:VimadeOverrideNonText                                *:VimadeOverrideNonText*
  EXPERIMENTAL -- Overrides the NonText highlight by creating a link to the
  Vimade base fade. This should produce acceptable results for colorschemes
  that include Folded highlights that are distracting in faded windows.

:VimadeOverrideAll                                        *:VimadeOverrideAll*
  EXPERIMENTAL -- Overrides static highlights by creating a link to the Vimade
  base fade. This should produce acceptable results for colorschemes that
  include Folded highlights that are distracting in faded windows.

==============================================================================
CUSTOM-FADES                                             *vimade-custom-fades*

Vimade allows you to specify custom tints using basebg.  You can alter this
value to any hex code or rgb array (e.g '#ff0000' or [255,0,0]) and the text
of inactive buffers will fade towards the specified color.  You may need to
adjust the VimadeFadeLevel for favorable results.

For example:
>
  let vimade.basebg='#ff00000'
  VimadeFadeLevel 0.6
<
Will change the tint to red and favor/mix with the original syntax colors

==============================================================================
NORMALNC                                                     *vimade-normalnc*

If you are using NVIM and enable NormalNC ('hi NormalNC guibg=[color]'),
Vimade will fade using the NormalNC color, which means you can make a pretty
sleek looking Vim experience.  It might take some effort, but I find the best
experience to be with background colors that produce lower contrast levels.

==============================================================================
FAQ/HELP                                                         *vimade-help*

I am using GVIM and my mappings are not working
*Add `let g:vimade.usecursorhold=1` to your vimrc*

What about Vim < 8?
*Vim 7.4 is currently untested/experimental, but may work if you add `let
  g:vimade.usecursorhold=1` to your vimrc*
My colors look off in terminal mode!
*Make sure that you either use a supported terminal or colorscheme or manually
  define the fg and bg for 'Normal'.  You can also manually define the tint in
  your vimade config (g:vimade.basebg and g:vimade.basefg)*

Tmux is not working!
*Vimade only works in 256 color mode and by default TMUX may set t_Co to 8.
  it is recommended that you set `export TERM=xterm-256color` before starting
  vim.  You can also set `set termguicolors` inside vim if your term supports
  it for an even more accurate level of fading.*


vim:tw=78:ts=8:ft=help:norl:
